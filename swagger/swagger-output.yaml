openapi: 3.0.0
info:
  title: School Management API
  version: 1.0.0
  description: API for school admin storage and management
servers:
  - url: https://cse-341-group-project-mfvd.onrender.com/api
components:
  schemas:
    student:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated Id of student
          readOnly: true
        firstName:
          type: string
          description: The first name of the student
          example: Solomon
        lastName:
          type: string
          description: The last name of the student
          example: Grundy
        email:
          type: string
          description: Email address of the user
          example: solomongrundy@user.com
        dateOfBirth:
          type: string
          format: date
          description: The date of birth of the student
        classId:
          type: string
          description: Autogenerated class ID of the student
          readOnly: true
        degreeId:
          type: string
          description: Autogenerated degree ID of the student
        address:
          type: object
          description: Optional user address
          properties:
            street:
              type: string
              example: 123 Applebay Street
            city:
              type: string
              example: Gotham
            state:
              type: string
              example: New York
            zip:
              type: string
              example: '10001'
            country:
              type: string
              example: USA
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the student account was created
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the student account was last updated
      required:
        - firstName
        - lastName
        - email
        - dateOfBirth
        - address
    staff:
      type: object
      properties:
        _id:
          type: string
          description: Autogenerated Id of the staff
          readOnly: true
        firstName:
          type: string
          description: The first name of the staff
          example: Solomon
        lastName:
          type: string
          description: The last name of the staff
          example: Grundy
        email:
          type: string
          description: Email address of the staff
          example: solomongrundy@school.edu
        phone:
          type: string
          description: The phone number of the staff
          example: '09012345678'
        subjects:
          type: array
          items:
            type: string
          description: subject the staff takes
          example:
            - Maths
            - Physics
        classIds:
          type: array
          items:
            type: string
          description: Autogenerated ID of the classes
          readOnly: true
        hireDate:
          type: string
          format: date-time
          description: The date
        address:
          type: object
          description: Optional user address
          properties:
            street:
              type: string
              example: 123 Applebay Street
            city:
              type: string
              example: Gotham
            state:
              type: string
              example: New York
            zip:
              type: string
              example: '10001'
            country:
              type: string
              example: USA
        qualification:
          type: string
          description: Qualification of the staff
          example: Physics
        status:
          type: string
          description: This is to know if the staff is still hired
          example: active
        createdAt:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the staff account was created
        updatedAt:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the staff account was last updated
      required:
        - firstName
        - lastName
        - email
        - hireDate
        - address
        - qualification
        - status
paths:
  /staff:
    get:
      summary: Get all staff
      tags:
        - Staff
      responses:
        '200':
          description: List of staff
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/staff'
    post:
      summary: Create a new staff
      tags:
        - Staff
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staff'
      responses:
        '201':
          description: Staff created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staff'
        '400':
          description: Invalid input
  /staff/{id}:
    get:
      summary: Get a staff by ID
      tags:
        - Staff
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The staff ID
      responses:
        '200':
          description: Staff found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staff'
        '404':
          description: Staff not found
    put:
      summary: Update a staff by ID
      tags:
        - Staff
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The staff ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/staff'
      responses:
        '200':
          description: Staff updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/staff'
        '400':
          description: Invalid input
        '404':
          description: Staff not found
    delete:
      summary: Delete a staff member by ID
      tags:
        - Staff
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The staff ID
      responses:
        '200':
          description: Staff member deleted
        '404':
          description: Staff not found
  /students:
    get:
      summary: Get all students
      tags:
        - Students
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/student'
    post:
      summary: Create a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        '400':
          description: Invalid input
  /students/{id}:
    get:
      summary: Get a student by ID
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The student ID
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        '404':
          description: Student not found
    put:
      summary: Update a student by ID
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: Student updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
        '400':
          description: Invalid input
        '404':
          description: Student not found
    delete:
      summary: Delete a student by ID
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The student ID
      responses:
        '200':
          description: Student deleted
        '404':
          description: Student not found
tags:
  - name: Staff
    description: API for staff information
  - name: Students
    description: API for student information
